{"ast":null,"code":"var _jsxFileName = \"/Users/derekshue/Desktop/AA-classwork/Week_15/derek_shue_online-store/client/src/components/Login.js\";\nimport React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { LOGIN_USER } from '../graphql/mutations';\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  updateCache(client, {\n    data\n  }) {\n    console.log(data); // here we can write directly to our cache with our returned mutation data\n\n    client.writeData({\n      data: {\n        isLoggedIn: data.login.loggedIn\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Mutation, {\n      mutation: LOGIN_USER,\n      onCompleted: data => {\n        const token = data.login.token;\n        localStorage.setItem('auth-token', token);\n        this.props.history.push('/');\n      },\n      update: (client, data) => this.updateCache(client, data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, loginUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        loginUser({\n          variables: {\n            email: this.state.email,\n            password: this.state.password\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.email,\n      onChange: this.update(\"email\"),\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: this.state.password,\n      onChange: this.update(\"password\"),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Log In\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/derekshue/Desktop/AA-classwork/Week_15/derek_shue_online-store/client/src/components/Login.js"],"names":["React","Component","Mutation","LOGIN_USER","Login","constructor","props","state","email","password","update","field","e","setState","target","value","updateCache","client","data","console","log","writeData","isLoggedIn","login","loggedIn","render","token","localStorage","setItem","history","push","loginUser","preventDefault","variables"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,WAAOC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAE,OAACF,KAAD,GAASC,CAAC,CAACE,MAAF,CAASC;AAApB,KAAd,CAAZ;AACD;;AAEDC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAACC,IAAAA;AAAD,GAAT,EAAiB;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAD0B,CAE1B;;AACAD,IAAAA,MAAM,CAACI,SAAP,CAAiB;AACfH,MAAAA,IAAI,EAAE;AAAEI,QAAAA,UAAU,EAAEJ,IAAI,CAACK,KAAL,CAAWC;AAAzB;AADS,KAAjB;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAEtB,UADd;AAEI,MAAA,WAAW,EAAEe,IAAI,IAAI;AAAA,cACTQ,KADS,GACCR,IAAI,CAACK,KADN,CACTG,KADS;AAEjBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCF,KAAnC;AACA,aAAKpB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,OANL;AAOI,MAAA,MAAM,EAAE,CAACb,MAAD,EAASC,IAAT,KAAkB,KAAKF,WAAL,CAAiBC,MAAjB,EAAyBC,IAAzB,CAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASCa,SAAS,IACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,QAAQ,EAAEnB,CAAC,IAAI;AACbA,QAAAA,CAAC,CAACoB,cAAF;AACAD,QAAAA,SAAS,CAAC;AACRE,UAAAA,SAAS,EAAE;AACTzB,YAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADT;AAETC,YAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFZ;AADH,SAAD,CAAT;AAMD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE;AACE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KADpB;AAEE,MAAA,QAAQ,EAAE,KAAKE,MAAL,CAAY,OAAZ,CAFZ;AAGE,MAAA,WAAW,EAAC,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAgBE;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QADpB;AAEE,MAAA,QAAQ,EAAE,KAAKC,MAAL,CAAY,UAAZ,CAFZ;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAsBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,CADF,CAVF,CADJ;AAwCD;;AA/D0C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { LOGIN_USER } from '../graphql/mutations';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  update(field) {\r\n    return e => this.setState({ [field]: e.target.value });\r\n  }\r\n\r\n  updateCache(client, {data}) {\r\n    console.log(data);\r\n    // here we can write directly to our cache with our returned mutation data\r\n    client.writeData({\r\n      data: { isLoggedIn: data.login.loggedIn }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Mutation\r\n            mutation={LOGIN_USER}\r\n            onCompleted={data => {\r\n                const { token } = data.login;\r\n                localStorage.setItem('auth-token', token);\r\n                this.props.history.push('/');\r\n            }}\r\n            update={(client, data) => this.updateCache(client, data)}\r\n        >\r\n        {loginUser => (\r\n          <div>\r\n            <form\r\n              onSubmit={e => {\r\n                e.preventDefault();\r\n                loginUser({\r\n                  variables: {\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <input\r\n                value={this.state.email}\r\n                onChange={this.update(\"email\")}\r\n                placeholder=\"Email\"\r\n              />\r\n              <input\r\n                value={this.state.password}\r\n                onChange={this.update(\"password\")}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n              <button type=\"submit\">Log In</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}