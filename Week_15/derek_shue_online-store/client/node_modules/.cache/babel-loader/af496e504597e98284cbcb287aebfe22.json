{"ast":null,"code":"import _objectWithoutProperties from \"/Users/derekshue/Desktop/AA-classwork/Week_15/derek_shue_online-store/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/derekshue/Desktop/AA-classwork/Week_15/derek_shue_online-store/client/src/util/route_util.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport { IS_LOGGED_IN } from \"../graphql/queries\"; // our route switches on routeType\n\nconst AuthRoute = (_ref) => {\n  let Component = _ref.component,\n      path = _ref.path,\n      exact = _ref.exact,\n      routeType = _ref.routeType,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"path\", \"exact\", \"routeType\"]);\n\n  return React.createElement(Query, {\n    query: IS_LOGGED_IN,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, ({\n    data\n  }) => {\n    // if the route type is \"auth\" then this route will only render if the\n    // user is not logged in - useful for authentication routes\n    // like login or register\n    if (routeType === \"auth\") {\n      return React.createElement(Route, {\n        path: path,\n        exact: exact,\n        render: props => !data.isLoggedIn ? React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    } else {\n      // otherwise this will be a protected route which will only\n      // render the component if the user is logged in\n      return React.createElement(Route, Object.assign({}, rest, {\n        render: props => data.isLoggedIn ? React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  });\n};\n\nexport default AuthRoute;","map":{"version":3,"sources":["/Users/derekshue/Desktop/AA-classwork/Week_15/derek_shue_online-store/client/src/util/route_util.js"],"names":["React","Route","Redirect","Query","IS_LOGGED_IN","AuthRoute","Component","component","path","exact","routeType","rest","data","props","isLoggedIn"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AAAA,MACLC,SADK,QAChBC,SADgB;AAAA,MAEhBC,IAFgB,QAEhBA,IAFgB;AAAA,MAGhBC,KAHgB,QAGhBA,KAHgB;AAAA,MAIhBC,SAJgB,QAIhBA,SAJgB;AAAA,MAKbC,IALa;;AAAA,SAOhB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEP,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEQ,IAAAA;AAAF,GAAD,KAAc;AACb;AACA;AACA;AACA,QAAIF,SAAS,KAAK,MAAlB,EAA0B;AACxB,aACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAEF,IADR;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,MAAM,EAAEI,KAAK,IACX,CAACD,IAAI,CAACE,UAAN,GAAmB,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAnB,GAA8C,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVD,MAUO;AACL;AACA;AACA,aACE,oBAAC,KAAD,oBACMF,IADN;AAEE,QAAA,MAAM,EAAEE,KAAK,IACXD,IAAI,CAACE,UAAL,GACE,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,GAGE,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAYD;AACF,GA/BH,CAPgB;AAAA,CAAlB;;AA0CA,eAAeR,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { Query } from \"react-apollo\";\r\nimport { IS_LOGGED_IN } from \"../graphql/queries\";\r\n\r\n// our route switches on routeType\r\nconst AuthRoute = ({\r\n  component: Component,\r\n  path,\r\n  exact,\r\n  routeType,\r\n  ...rest\r\n}) => (\r\n  <Query query={IS_LOGGED_IN}>\r\n    {({ data }) => {\r\n      // if the route type is \"auth\" then this route will only render if the\r\n      // user is not logged in - useful for authentication routes\r\n      // like login or register\r\n      if (routeType === \"auth\") {\r\n        return (\r\n          <Route\r\n            path={path}\r\n            exact={exact}\r\n            render={props =>\r\n              !data.isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n            }\r\n          />\r\n        );\r\n      } else {\r\n        // otherwise this will be a protected route which will only\r\n        // render the component if the user is logged in\r\n        return (\r\n          <Route\r\n            {...rest}\r\n            render={props =>\r\n              data.isLoggedIn ? (\r\n                <Component {...props} />\r\n              ) : (\r\n                <Redirect to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n        );\r\n      }\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default AuthRoute;"]},"metadata":{},"sourceType":"module"}